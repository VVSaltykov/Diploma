@using Diploma.Common.Models


@layout MainLayout
@inject DialogService DialogService

<RadzenTemplateForm TItem="Achievements" Data="@Achievements" Submit="@SubmitForm">
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Заголовок"/>
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@Achievements.Tittle" Name="Tittle"/>
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Текст"/>
        </div>
        <div class="col">
            <RadzenTextArea @bind-Value="@ResponseText" Name="Text" Rows="5" Style="width: 100%;" />
        </div>
    </div>
    <RadzenStack>

        <RadzenText class="ms-3">
            Выберите пользователей Telegram-бота, которым хотите отправить сообщение
        </RadzenText>

        @if (TelegramUsers.Any())
        {
        <RadzenDataGrid @ref="UserGrid" AllowRowSelectOnRowClick="@_allowRowSelectOnRowClick" AllowFiltering="false" AllowPaging="true" PageSize="11"
                        AllowSorting="true" Data="@TelegramUsers" TItem="User" ColumnWidth="120px"
                        SelectionMode="DataGridSelectionMode.Multiple" @bind-Value="@_selectedSportsmens" class="m-4">
            <Columns>
                <RadzenDataGridColumn TItem="User" Width="60px" Sortable="false" Filterable="false">
                    <HeaderTemplate>
                        <RadzenCheckBox TabIndex="-1" TriState="false" TValue="bool?" InputAttributes="@(new Dictionary<string, object> { { "aria-label", "Select all items" } })"
                                        Value="@(_selectedSportsmens == null || _selectedSportsmens?.Any() != true ? false : !TelegramUsers.All(i => _selectedSportsmens.Contains(i)) ? null : TelegramUsers.Any(i => _selectedSportsmens.Contains(i)))"
                                        Change="@(args => _selectedSportsmens = args == true ? TelegramUsers.ToList() : null)"/>
                    </HeaderTemplate>
                    <Template Context="data">
                        <RadzenCheckBox TabIndex="-1" TriState="false" Value="@(_selectedSportsmens != null && _selectedSportsmens.Contains(data))" InputAttributes="@(new Dictionary<string, object> { { "aria-label", "Select item" } })"
                                        TValue="bool" Change="@(args => { if (!_allowRowSelectOnRowClick) { UserGrid.SelectRow(data); } })"/>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Property="Name" Title="ФИО"/>
                <RadzenDataGridColumn TItem="User" Property="Role" Title="Роль">
                    <Template Context="user">
                        @user.Role
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Title="Группа">
                    <Template Context="user">
                        @if (user.Group != null)
                        {
                        @user.Group.Name
                        }
                        else
                        {
                        @("Абитуриент")
                        }
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        }
        else
        {
        <RadzenDataGrid @ref="UserGrid" AllowRowSelectOnRowClick="@_allowRowSelectOnRowClick" AllowFiltering="false" AllowPaging="true" PageSize="11"
                        AllowSorting="true" Data="@TelegramUsers" TItem="User" ColumnWidth="120px"
                        SelectionMode="DataGridSelectionMode.Multiple" @bind-Value="@_selectedSportsmens" class="m-4">
            <Columns>
                <RadzenDataGridColumn TItem="User" Width="60px" Sortable="false" Filterable="false">
                    <HeaderTemplate>
                        <RadzenCheckBox TabIndex="-1" TriState="false" TValue="bool?" InputAttributes="@(new Dictionary<string, object> { { "aria-label", "Select all items" } })"
                                        Value="@(_selectedSportsmens == null || _selectedSportsmens?.Any() != true ? false : !TelegramUsers.All(i => _selectedSportsmens.Contains(i)) ? null : TelegramUsers.Any(i => _selectedSportsmens.Contains(i)))"
                                        Change="@(args => _selectedSportsmens = args == true ? TelegramUsers.ToList() : null)"/>
                    </HeaderTemplate>
                    <Template Context="data">
                        <RadzenCheckBox TabIndex="-1" TriState="false" Value="@(_selectedSportsmens != null && _selectedSportsmens.Contains(data))" InputAttributes="@(new Dictionary<string, object> { { "aria-label", "Select item" } })"
                                        TValue="bool" Change="@(args => { if (!_allowRowSelectOnRowClick) { UserGrid.SelectRow(data); } })"/>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Property="Name" Title="ФИО"/>
                <RadzenDataGridColumn TItem="User" Property="Role" Title="Роль">
                    <Template Context="user">
                        @user.Role
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="User" Title="Группа">
                    <Template Context="user">
                        @if (user.Group != null)
                        {
                        @user.Group.Name
                        }
                        else
                        {
                        @("Абитуриент")
                        }
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        }
    </RadzenStack>
    <div class="row justify-content-center">
        <div class="col-md-3"></div>
        <div class="col-md-6 text-center">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="check_circle" ButtonStyle="ButtonStyle.Success" Text="Создать!"/>
        </div>
        <div class="col-md-3"></div>
    </div>
</RadzenTemplateForm>

@code {
    [CascadingParameter]
    public Session? CurrentSession { get; set; }
    
    [Parameter] public IEnumerable<User> TelegramUsers { get; set; } = new List<User>();
    
    private RadzenDataGrid<User> UserGrid;
    private readonly bool _allowRowSelectOnRowClick = true;
    private IList<User> _selectedSportsmens;
    
    private Achievements Achievements { get; set; } = new Achievements();
    private string ResponseText { get; set; }

    private void SubmitForm(Achievements model)
    {
        model.Text = ResponseText;
        model.Users = _selectedSportsmens.Distinct().ToList();
        DialogService.Close(model);
    }
}