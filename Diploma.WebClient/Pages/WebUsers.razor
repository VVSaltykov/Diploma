@page "/WebUsers"
@using Diploma.Common.Models
@using Diploma.Common.Interfaces
@using Diploma.WebClient.Pages.Modals
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IUserService UserService
@inject IAccountService AccountService
@inject DialogService DialogService

@layout MainLayout
@attribute [Authorize]

<AuthorizeView Roles="Admin">
    <Authorized>
        <RadzenButton Text="Создать аккаунт" Click="@OpenRegistrationDialog"/>
        <div class="rz-m-1 rz-mb-0" style="width: 98%; height: 98%">
            <RadzenGrid Data="@UsersWeb" TItem="User" EmptyText="Нет пользователей" AllowFiltering="false" AllowPaging="true" PageSize="7"
                        AllowSorting="true">
                <Columns>
                    <RadzenGridColumn TItem="User" Property="Name" Title="ФИО"/>
                    <RadzenGridColumn TItem="User" Property="Login" Title="Логин"/>
                    <RadzenGridColumn TItem="User" Property="Password" Title="Пароль"/>
                    <RadzenGridColumn TItem="User" Property="Role" Title="Роль">
                        <Template Context="user">
                            @user.Role
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>У вас нет прав доступа к этому содержимому.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Session? CurrentSession { get; set; }
    
    private List<User> UsersWeb { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UsersWeb = await UserService.GetWebUsers();
    }
    private async Task OpenRegistrationDialog()
    {
        var result = await DialogService.OpenAsync<CreateProfessorAccount>("Создание аккаунта преподавателя");
        
        if (result != null)
        {
            RegistrationModel registrationModel = (RegistrationModel)result;
            await AccountService.Registration(registrationModel);
        }
    }
}